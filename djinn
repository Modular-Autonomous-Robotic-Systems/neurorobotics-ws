#!/bin/bash

VERSION=0.0.1
ROS_VERSION="foxy"

iexec(){
            time docker container exec -it "$1" /bin/bash -l -c "$2"
        }

iexec_ros(){
			time docker container exec -it "$1" /bin/bash -l -c "source /opt/ros/${ROS_VERSION}/setup.bash && $2"
        }


if [[ "$1" == "install" ]]
then
	scripts/install.sh $2 $3 $4


elif [[ "$1" == "setup" ]]
then
	mkdir -p $PWD/src
	if [[ "$2" == "docker" ]]
	then
		platform="linux/arm64/v8,linux/amd64"
		mode="base"
		echo "$3"
		if [[ -n "$3" ]]
		then
			echo "============ BUILDING Image ============="
			if [[ "$3" == "base" ]]
			then
				echo "============ BUILDING Base Image ============="
				image="skynet/base"
				filepath="skynet-base/"
				container_name="skynet_container"
			elif [[ "$3" == "ros" ]]
			then
				echo "============ BUILDING ROS Image ============="
				image="skynet/ros"
				filepath="skynet-ros/"
				container_name="ros_container"
				mode="ros"
			elif [[ "$3" == "airsim" ]]
			then
				echo "============ BUILDING ROS Image ============="
				image="skynet/base"
				filepath="skynet-base/"
				container_name="airsim_container"
				mode="ros"
			elif [[ "$3" == "vision-tools" ]]
			then
				echo "============ BUILDING Vision Tools Image ============="
				image="vision-tools/dev"
				filepath="vision-tools/"
				container_name="vision_tools_container"
				mode="vision-tools"
			fi
			scripts/docker-build.sh $platform $image $filepath 
		else
			echo "============ BUILDING Base Image ============="
			image="skynet/base"
			filepath="skynet-base/"
			scripts/docker-build.sh $platform $image $filepath 
			echo "============ BUILDING ROS Image ============="
			image="skynet/ros"
			filepath="skynet-ros/"
			scripts/docker-build.sh $platform $image $filepath 
			container_name="ros_container"
			mode="ros"
		fi
		scripts/start.sh $PWD $container_name $image
		iexec $container_name "ls && echo \"Starting Container Setup\" && /ws/scripts/docker-setup.sh ${mode}" 
	fi


elif [[ "$1" == "init" ]]
then
	mode="ros"
	if [[ -n "$2" ]]
	then
		if [[ "$2" == "vision-tools"  ]]
		then
			scripts/start.sh $PWD vision_tools_container vision-tools/dev
		elif [[ "$2" == "base"  ]]
		then
			echo "=============== Initialising SkyNet Container ================"
			scripts/start.sh $PWD skynet_container skynet/base
			iexec skynet_container "./scripts/build.sh $2"
		elif [[ "$2" == "airsim"  ]]
		then
			echo "=============== Initialising AIRSIM SITL Container ================"
			scripts/start.sh $PWD airsim_container skynet/airsim
			iexec airsim_container "./scripts/build.sh $2"
		elif [[ "$2" == "ros"  ]]
		then
			echo "=============== Initialising SkyNet-ROS Container ================"
			scripts/start.sh $PWD ros_container skynet/ros
			iexec_ros ros_container "./scripts/build.sh $2"
		fi
	else
		scripts/start.sh $PWD ros_container skynet/ros
		scripts/start.sh $PWD vision_tools_container vision-tools/dev
		iexec_ros ros_container "./scripts/build.sh && ./scripts/build_ros_packages.sh && cd ros_ws && source install/local_setup.bash && cd .."
	fi

elif [[ "$1" == "build" ]]
then	
	clear
	if [[ -z "$2" ]]
	then
		echo "=========== BUILDING SkyNet And Packages ==========="
		iexec_ros ros_container "./scripts/build.sh && ./scripts/build_ros_packages.sh && cd ros_ws && source install/local_setup.bash && cd .."
	else
		if [[  "$2" == "skynet" ]]
		then
			echo "=========== BUILDING SkyNet ==========="
			iexec skynet_container "./scripts/build.sh"
		elif [[  "$2" == "skynet-ros" ]]
		then
			echo "=========== BUILDING SkyNet-ROS ==========="
			iexec_ros ros_container "./scripts/build.sh"
		elif [[  "$2" == "ros-packages" ]]
		then
			echo "=========== BUILDING Packages ==========="
			iexec_ros ros_container "./scripts/build_ros_packages.sh && cd ros_ws && source install/local_setup.bash && cd .."
		elif [[  "$2" == "airsim" ]]
		then
			echo "=========== BUILDING SITL ==========="
			iexec airsim_container "./scripts/build.sh $2"
		fi
	fi

elif [[  "$1" == "exec" ]]
then
	# djinn exec "cd ros_ws/src/ && ros2 pkg create --build-type ament_cmake Sensors" for creating ros2 packages
	# echo "${2}_container"
	iexec "${2}_container" "$3"

elif [[  "$1" == "start" ]]
then
	# djinn exec "cd ros_ws/src/ && ros2 pkg create --build-type ament_cmake Sensors" for creating ros2 packages
	if [[ "$2" == "airsim" ]]
	then
		if [[ "$3" == "AirSimNH" ]]
		then
			nohup ./envs/AirSimNH/LinuxNoEditor/AirSimNH.sh -renderoffscreen -settings=$(pwd)/envs/settings.json >> airsimnh.log &
		
		elif [[ "$3" == "LandscapeMountain" ]]
		then
			nohup ./envs/LandscapeMountains/LinuxNoEditor/LandscapeMountains.sh -renderoffscreen -settings=$(pwd)/envs/settings.json >> airsimmountain.log &
		elif [[ "$3" == "Blocks" ]]
		then
			nohup ./envs/LinuxBlocks1.8.1/LinuxNoEditor/Blocks.sh -renderoffscreen -settings=$(pwd)/envs/settings.json >> airsimblocks.log &
		elif [[ "$3" == "Africa" ]]
		then
			nohup ./envs/Africa_Savannah/LinuxNoEditor/Africa_001.sh  -renderoffscreen -settings=$(pwd)/envs/settings.json >> airsimafrica.log &
		fi
		sleep 5
		iexec_ros ros_container "cd ros_ws/ && source install/setup.bash && ros2 run airsim_lib talker"
		name="$3"
		if [[ "$3" == "LandscapeMountain"  ]]
		then
			name="LandscapeMounta"
		fi
		kill $(ps -e | grep "$name" | awk '{print $name}')
	elif [[ "$2" == "sensors" ]]
	then
		iexec_ros ros_container "cd ros_ws && source install/setup.bash && ros2 launch sensors sensors_launch.py"
	elif [[ "$2" == "skynet" ]]
	then
		iexec skynet_container "cd SkyNet/build && ./SkyNet"
	elif [[ "$2" == "sitl" ]]
	then
		if [[ "$3" == "AirSimNH" ]]
		then
			nohup ./envs/AirSimNH/LinuxNoEditor/AirSimNH.sh -renderoffscreen -settings=$(pwd)/envs/settings.json >> airsimnh.log &
		
		elif [[ "$3" == "LandscapeMountain" ]]
		then
			nohup ./envs/LandscapeMountains/LinuxNoEditor/LandscapeMountains.sh -renderoffscreen -settings=$(pwd)/envs/settings.json >> airsimmountain.log &
		elif [[ "$3" == "Blocks" ]]
		then
			nohup ./envs/LinuxBlocks1.8.1/LinuxNoEditor/Blocks.sh -renderoffscreen -settings=$(pwd)/envs/settings.json >> airsimblocks.log &
		elif [[ "$3" == "Africa" ]]
		then
			nohup ./envs/Africa_Savannah/LinuxNoEditor/Africa_001.sh  -renderoffscreen -settings=$(pwd)/envs/settings.json >> airsimafrica.log &
		fi
		sleep 5
		iexec airsim_container "cd ext/micrortps_agent/build && rm run.log && nohup ./micrortps_agent -t UDP >> run.log &"
		iexec airsim_container "cd SkyNet/build && rm run.log && nohup ./SkyNet >> run.log &"
		name="$3"
		if [[ "$3" == "LandscapeMountain"  ]]
		then
			name="LandscapeMounta"
		fi
		kill $(ps -e | grep "$name" | awk '{print $name}')
	fi

elif [[ "$1" == "down" ]]
then
	docker stop ros_container skynet_container airsim_container vision_tools_container


elif [[ "$1" == "ps" ]]
then
	docker ps
fi
